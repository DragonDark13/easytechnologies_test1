@use "sass:map";

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: url("../fonts/Inter/Bold/Inter-Bold.woff2?v=3.19") format("woff2"),
  url("../fonts/Inter/Bold/Inter-Bold.woff?v=3.19") format("woff");
}

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 600;
  font-display: swap;
  src: url("../fonts/Inter/SemiBold/Inter-SemiBold.woff2?v=3.19") format("woff2"),
  url("../fonts/Inter/SemiBold/Inter-SemiBold.woff?v=3.19") format("woff");
}

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: url("../fonts/Inter/Mediun/Inter-Medium.woff2?v=3.19") format("woff2"),
  url("../fonts/Inter/Mediun/Inter-Medium.woff?v=3.19") format("woff");
}

@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url("../fonts/Inter/Regular/Inter-Regular.woff2?v=3.19") format("woff2"),
  url("../fonts/Inter/Regular/Inter-Regular.woff?v=3.19") format("woff");
}

$about__bg-color: #082030;
$section__header_color: #C8972C;
$error_color: #ED0000;
$border_color1: #415867;
$bg_colo_gray: #C4C4C4;

$spacer: 16px;
$gutters: (
        0: 0,
        1: $spacer * .25,
        2: $spacer * .5,
        3: $spacer,
        4: $spacer * 1.5,
        5: $spacer * 3,
);

$breakpoints: (
        xs: 0,
        sm: 576px,
        md: 768px,
        lg: 992px,
        xl: 1200px,
        xxl: 1400px
);

@mixin css3-prefix($property, $value) {
  -webkit-#{$property}: #{$value};
  -khtml-#{$property}: #{$value};
  -moz-#{$property}: #{$value};
  -ms-#{$property}: #{$value};
  -o-#{$property}: #{$value};
  #{$property}: #{$value};
}


@mixin transition($properties...) {

  @if length($properties) >= 1 {
    @include css3-prefix('transition', $properties);
  } @else {
    @include css3-prefix('transition', "all 0.3s ease-in-out 0s");
  }
}

@mixin transform($params) {
  @include css3-prefix('transform', $params);
}

@mixin size($w,$h) {
  width: $w;
  height: $h;
}

@mixin square($size) {
  width: $size;
  height: $size;
}

@mixin circle($size) {
  @include square($size);
  border-radius: 50%;
}

@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin absolute($args...) {
  @include position(absolute, $args...);
}

@mixin text-shorten {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}


@mixin ellipsis($rowCount: 1) {
  @if $rowCount <=1 {
    @include text-shorten();
  } @else {
    min-width: 0;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $rowCount;
    -webkit-box-orient: vertical;
  }
}

@mixin opacity($value) {
  $IEValue: $value*100;
  opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
  filter: alpha(opacity=$IEValue);
}

@mixin flexbox {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin justify-content($value: flex-start) {
  @if $value == flex-start {
    -webkit-box-pack: start;
    -moz-box-pack: start;
    -ms-flex-pack: start;
  } @else if $value == flex-end {
    -webkit-box-pack: end;
    -moz-box-pack: end;
    -ms-flex-pack: end;
  } @else if $value == space-between {
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $value == space-around {
    -ms-flex-pack: distribute;
  } @else {
    -webkit-box-pack: $value;
    -moz-box-pack: $value;
    -ms-flex-pack: $value;
  }
  -webkit-justify-content: $value;
  justify-content: $value;
}

@mixin flex-wrap($value: wrap) {
  // No Webkit/FF Box fallback.
  -webkit-flex-wrap: $value;
  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }
  flex-wrap: $value;
}

@mixin align-items($value: stretch) {
  @if $value == flex-start {
    -webkit-box-align: start;
       -moz-box-align: start;
       -ms-flex-align: start;
  } @else if $value == flex-end {
    -webkit-box-align: end;
       -moz-box-align: end;
       -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
       -moz-box-align: $value;
       -ms-flex-align: $value;
  }
  -webkit-align-items: $value;
          align-items: $value;
}

@mixin align-content($value: stretch) {
  // No Webkit Box Fallback.
  -webkit-align-content: $value;
  @if $value == flex-start {
    -ms-flex-line-pack: start;
  } @else if $value == flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }
  align-content: $value;
}

// Respond above.
@mixin respond-above($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin fade($fade, $timing, $length, $count, $fill,$play_state) {
  animation: $fade $timing $length;
  animation-iteration-count: $count;
  animation-fill-mode: $fill;
  animation-play-state: $play_state;
}

@keyframes fadeIn {
  0% {
    @include opacity(0);
  }
  100% {
    @include opacity(1);
  }
}

@keyframes fadeOut {
  0% {
    @include opacity(1);
  }
  100% {
    @include opacity(0);
  }
}

.fadeIn {
  @include fade(fadeIn, cubic-bezier(0.4, 0, 1, 1), 0.7s, 1, both, running);
}

.fadeOut {
  @include fade(fade-out, cubic-bezier(0.4, 0, 1, 1), 0.7s, 1, both, running);
}


body {
  color: #fff;
  font-family: Inter, sans-serif;
}


p {
  font-weight: 400;
  font-size: 14px;
  line-height: 160%;
  margin-bottom: 0;
}

ul {
  padding-left: 0;
  list-style: none;
}

h2 {
  font-style: normal;
  font-weight: 700;
  font-size: 36px;
  line-height: 150%;
  letter-spacing: 0em;
  text-align: left;
  text-transform: uppercase;
  color: $section__header_color;
  margin-bottom: 0;

  @include respond-above(xl) {
    font-size: 40px;
  }
}


h3 {
  font-style: normal;
  font-weight: 700;
  font-size: 24px;
  line-height: 29px;
  text-transform: uppercase;
  color: $section__header_color;
}

@mixin h4_xl {
  @include respond-above(xl) {
    font-size: 28px;
    line-height: 95.02%;
  }
}

h4 {
  font-style: normal;
  font-weight: 500;
  font-size: 20px;
  line-height: 120%;
  text-transform: capitalize;
  color: #FFFFFF;

  @include h4_xl;
}

h5 {
  font-weight: 400;
  font-size: 18px;
  line-height: 24px;

  @include respond-above(xl) {
    font-size: 22px;
    line-height: 29px;
  }
}

h6 {
  font-weight: 400;
  font-size: 12px;
  line-height: 160%;

  @include respond-above(xl) {
    font-size: 13px;
  }
}

img {
  max-width: 100%;
}

textarea {
  resize: none;
  max-width: 100%;
}

button {
  border: none;
  outline: none;
  box-shadow: none;
}

.container {

  &.gx-3 {
    padding-left: $spacer*1.25;
    padding-right: $spacer*1.25;
  }

  @include respond-above(xxl) {
    max-width: 1170px + $spacer*2.5;
  }
}